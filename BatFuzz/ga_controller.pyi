from .type_defs import Fuzzable, FuzzableArguments 
from typing import TYPE_CHECKING

if TYPE_CHECKING:
    from .observer import TUIObserver

class GAController:
    def __init__(self, fuzz_target: Fuzzable, arguments: FuzzableArguments, target_generation: int) -> None: ...

    def notify(self, event: str, data: dict) -> None: ...

    def add_observer(self, observer: 'TUIObserver') -> None: ...

    def mutate_all(self) -> None: ...

    def crossover_all(self) -> None: ...

    def select_all(self) -> None: ...

    def handle_generation_errors(self) -> None: ...

    def run(self) -> None: ...

    @property
    def generation_cycle_time(self) -> int: ...

    @property
    def generation(self) -> int: ...

    @property
    def found_bugs(self) -> int: ...

    @property
    def found_bugs_types(self) -> set[Exception]: ...
